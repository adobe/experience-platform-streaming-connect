/*
 * Copyright 2019 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
*/

ext {
  libraries = [:]
  versions = [:]
}

versions.collections4 = '4.4'
versions.commonslang = '3.9'
versions.guava = '31.1-jre'
versions.httpClient = '4.5.13'
versions.jackson = '2.14.0'
versions.jmockit = '1.41'
versions.jmxPrometheusJavaAgent = '0.12.0'
versions.junitJupiter = '5.2.0'
versions.jjwt = '0.9.0'
versions.jsonPatch = '0.4.4'
versions.kafkaConnect = '2.8.0'
versions.slf4j = '1.7.25'
versions.jaxb = '2.3.0'
versions.wiremock = '2.27.2'

libraries.collections4 = [
  "org.apache.commons:commons-collections4:$versions.collections4"
]

libraries.commonslang = [
  "org.apache.commons:commons-lang3:$versions.commonslang"
]

libraries.guava = [
  "com.google.guava:guava:$versions.guava"
]

libraries.httpClient = [
  "org.apache.httpcomponents:httpclient:$versions.httpClient"
]

libraries.jackson = [
  "com.fasterxml.jackson.core:jackson-annotations:$versions.jackson",
  "com.fasterxml.jackson.core:jackson-databind:$versions.jackson",
  "com.fasterxml.jackson.core:jackson-core:$versions.jackson"
]

libraries.jmockit = [
  "org.jmockit:jmockit:$versions.jmockit"
]

libraries.jmxPrometheusJavaAgent = [
  "io.prometheus.jmx:jmx_prometheus_javaagent:$versions.jmxPrometheusJavaAgent",
]

libraries.junitJupiter = [
  "org.junit.jupiter:junit-jupiter-api:$versions.junitJupiter",
  "org.junit.jupiter:junit-jupiter-engine:$versions.junitJupiter",
  "org.junit.jupiter:junit-jupiter-params:$versions.junitJupiter"
]

libraries.wiremock = [
  "com.github.tomakehurst:wiremock:$versions.wiremock"
]

libraries.jjwt = [
  "io.jsonwebtoken:jjwt:$versions.jjwt"
]

libraries.kafkaConnect = [
  "org.apache.kafka:connect-api:$versions.kafkaConnect"
]

libraries.kafkaConnectRuntime = [
  "org.apache.kafka:connect-runtime:$versions.kafkaConnect",
]

libraries.kafkaConnectTest = [
  "org.apache.kafka:connect-runtime:$versions.kafkaConnect:test",
  "org.apache.kafka:kafka-clients:$versions.kafkaConnect:test",
  "org.apache.kafka:kafka_2.12:$versions.kafkaConnect:test",
  "org.apache.kafka:kafka_2.12:$versions.kafkaConnect",
]

libraries.jsonPatch = [
  "com.flipkart.zjsonpatch:zjsonpatch:$versions.jsonPatch"
]

libraries.slf4j = [
  "org.slf4j:slf4j-api:$versions.slf4j"
]

libraries.jaxb = [
  "javax.xml.bind:jaxb-api:$versions.jaxb"
]
